@model MVC_DATABASE.Models.ViewModels.CreateContract

@using MVC_DATABASE.Models;

@section Scripts {
         <!-- jQuery UI CSS Reference -->
<link href="@Url.Content("~/content/themes/base/jquery-ui.css")" rel="stylesheet" />
<!-- Required jQuery and jQuery UI Javascript references -->
<script src="@Url.Content("~/Scripts/jquery-2.1.1.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery-ui.min-1.11.1.js")"></script>


    <script type="text/javascript">
    $(function () { // will trigger when the document is ready
        $('.date-picker').datepicker(); //Initialise any date pickers        
    });
    </script>
    }

@{
    ViewBag.Title = "Create";
}

<h2>Create Contract</h2>

@using (Html.BeginForm("Create", "CONTRACTs", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>CONTRACT</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.contract.RFPID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.contract.RFPID, new { @readonly = "readonly", @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.contract.TEMPLATE.NEGID,"Negotiation Id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.contract.TEMPLATEID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.TextBoxFor(model => model.template.NEGID, new { @readonly = "readonly", @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.contract.Id, "Organization", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.contract.Id, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.TextBoxFor(model => model.vendor.ORGANIZATION, new { @readonly = "readonly", @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.contract.EXPIRES, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.contract.EXPIRES, new { htmlAttributes = new { @class = "form-control date-picker" } })
                @Html.ValidationMessageFor(model => model.contract.EXPIRES, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.contract.CONTRACT_PATH, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })


        <div class="form-group">
            @Html.LabelFor(m => m.file, "Additional Document", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.file, null, new { type = "file", @class = "input-file" })
                @Html.ValidationMessageFor(model => model.file, "", new { @class = "text-danger" })


                @*<input type="file" name="file" />*@
            </div>
        </div>


        <div class="form-group">

            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>