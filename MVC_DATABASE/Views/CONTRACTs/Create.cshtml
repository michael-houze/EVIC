@model MVC_DATABASE.Models.ViewModels.CreateContract

@section Scripts {

         <!-- jQuery UI CSS Reference -->
<link href="@Url.Content("~/content/themes/base/jquery-ui.css")" rel="stylesheet" />
<!-- Required jQuery and jQuery UI Javascript references -->
<script src="@Url.Content("~/Scripts/jquery-2.1.1.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery-ui.min-1.11.1.js")"></script>

<script type="text/javascript">
    $(function () { // will trigger when the document is ready
        $('.date-picker').datepicker(); //Initialise any date pickers
    });
</script>
    <script type="text/jscript">
        $(function () {
            $("#contract_Id").hide()

            $("#contract_RFPID").on("change", function (e) {
                var dropValue = $(this).val();
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("GetAcceptedVendors", "CONTRACTs")",
                    data: {
                        RFPID: dropValue
                    },
                    datatype: 'JSON',
                    contentType: "application/json"
                })
                    .done(OnSuccessPopulateListBox)
                    .fail(function (data) { showError(data); });
            });

            function OnSuccessPopulateListBox(data) {
                $("#contract_Id").empty()
                data.forEach(function (vendor) {
                    $("#contract_Id").append('<option value =' + vendor.Id + '>' + vendor.ORGANIZATION + '</option>')
                });
                $("#contract_Id").show()
                //debugger;
            }
            function showError(data) {
                debugger;
            }
        });
    </script>
}

@{
    ViewBag.Title = "Create";
}

<h2>Create Contract</h2>

@using (Html.BeginForm("Create", "CONTRACTs", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
      
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.contract.RFPID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.contract.RFPID, new SelectList(ViewBag.rfpid), "--- Select an RFP Id ---", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.contract.RFPID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.contract.TEMPLATEID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.contract.TEMPLATEID, (SelectList)ViewBag.templates, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.contract.TEMPLATEID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.contract.Id, "Organization", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
            @if (ViewBag.AcceptedVendors != null)
            {
                @Html.DropDownListFor(model => model.contract.Id, new SelectList(ViewBag.AcceptedVendors), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.contract.Id, "", new { @class = "text-danger" })
            }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.contract.EXPIRES, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.contract.EXPIRES, new { htmlAttributes = new { @class = "form-control date-picker" } })
                @Html.ValidationMessageFor(model => model.contract.EXPIRES, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.contract.CONTRACT_PATH, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
       
     
            <div class="form-group">
                @Html.LabelFor(m => m.file, "Additional Document", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.file, null, new { type = "file", @class = "input-file" })
                    @Html.ValidationMessageFor(model => model.file, "", new { @class = "text-danger" })


                    @*<input type="file" name="file" />*@
                </div>
                </div>


                <div class="form-group">

                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>

          
           
        </div>
     
   
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
